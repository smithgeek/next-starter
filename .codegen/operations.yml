overwrite: true
generates:
  graphql/User/operations.ts:
    schema: graphql/User/schema.json
    documents: 
      - ./**/*.user.graphql
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-generic-sdk":
          noExport: true
          documentMode: string
      - add:
          content:
            - import { useFetchRequester } from "../FetchRequester";
          placement: prepend
      - add:
          content: export function useUserSdk(){const requester = useFetchRequester('user');return getSdk(requester);}
          placement: append
    config:
      avoidOptionals: 
        field: true

  graphql/Admin/operations.ts:
    schema: graphql/Admin/schema.json
    documents: 
      - ./**/*.admin.graphql
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-generic-sdk":
          noExport: true
          documentMode: string
      - add:
          content:
            - import { useFetchRequester } from "../FetchRequester";
          placement: prepend
      - add:
          content: export function useAdminSdk(){const requester = useFetchRequester('admin');return getSdk(requester);}
          placement: append
    config:
      avoidOptionals: 
        field: true

  graphql/TenantAdmin/operations.ts:
    schema: graphql/TenantAdmin/schema.json
    documents: 
      - ./**/*.tenantAdmin.graphql
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-generic-sdk":
          noExport: true
          documentMode: string
      - add:
          content:
            - import { useFetchRequester } from "../FetchRequester";
          placement: prepend
      - add:
          content: export function useTenantAdminSdk(){const requester = useFetchRequester('tenant_admin');return getSdk(requester);}
          placement: append
    config:
      avoidOptionals: 
        field: true

  graphql/api/operations.ts:
    schema: graphql/api/schema.json
    documents: 
      - ./**/*.api.graphql
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-generic-sdk":
          noExport: true
          documentMode: string
      - add:
          content:
            - import { fetchRequester } from "./FetchRequester";
          placement: prepend
      - add:
          content: "export const apiSdk = getSdk(fetchRequester()); export function getApiSdkWithHeaders(headers: any) { return getSdk(fetchRequester(headers));}"
          placement: append
    config:
      avoidOptionals: 
        field: true


  # ../infrastructure/hasura/metadata/query_collections.yaml:
  #   schema:
  #     - http://localhost:9023/v1/graphql:
  #         headers:
  #           X-Hasura-Admin-Secret: password
  #           X-Hasura-Role: admin
  #   documents: graphql/**/*.graphql
  #   plugins:
  #     - hasura-allow-list
  #   hooks:
  #     afterOneFileWrite:
  #       - docker compose -f ../infrastructure/development/docker-compose.yml restart hasura && echo
