overwrite: true
generates:
  graphql/User/schema.json:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
            X-Hasura-Role: user
    plugins:
      - "introspection"
  graphql/User/operations.ts:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
            X-Hasura-Role: user
    documents: graphql/User/**/*.graphql
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-generic-sdk":
          noExport: true
          documentMode: string
      - add:
          content:
            - import { fetchRequester } from "../FetchRequester";
          placement: prepend
      - add:
          content: export const userSdk = getSdk(fetchRequester('user'));
          placement: append

  graphql/Admin/schema.json:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
            X-Hasura-Role: admin
    plugins:
      - "introspection"
  graphql/Admin/operations.ts:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
            X-Hasura-Role: admin
    documents: graphql/Admin/**/*.graphql
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-generic-sdk":
          noExport: true
          documentMode: string
      - add:
          content:
            - import { fetchRequester } from "../FetchRequester";
          placement: prepend
      - add:
          content: export const adminSdk = getSdk(fetchRequester('admin'));
          placement: append
  # graphql/Anonymous/operations.ts:
  #   schema:
  #     - http://localhost:9023/v1/graphql:
  #         headers:
  #           X-Hasura-Admin-Secret: password
  #           X-Hasura-Role: anonymous
  #   documents: graphql/Anonymous/**/*.graphql
  #   plugins:
  #     - "typescript"
  #     - "typescript-operations"
  #     - "typescript-generic-sdk":
  #         noExport: true
  #         documentMode: string
  #     - add:
  #         content:
  #           - import { fetchRequester } from "./FetchRequester";
  #         placement: prepend
  #     - add:
  #         content: export const anonymousClient = getSdk(fetchRequester('anonymous'));
  #         placement: append
  ../infrastructure/hasura/metadata/query_collections.yaml:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
            X-Hasura-Role: admin
    documents: graphql/**/*.graphql
    plugins:
      - hasura-allow-list
    hooks:
      afterOneFileWrite:
        - docker compose -f ../infrastructure/development/docker-compose.yml restart hasura && echo
