overwrite: true
generates:
  graphql/User/schema.json:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
            X-Hasura-Role: user
    plugins:
      - "introspection"
  graphql/User/operations.ts:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
            X-Hasura-Role: user
    documents: 
      - ./**/*.user.graphql
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-generic-sdk":
          noExport: true
          documentMode: string
      - add:
          content:
            - import { useFetchRequester } from "../FetchRequester";
          placement: prepend
      - add:
          content: export function useUserSdk(){const requester = useFetchRequester('user');return getSdk(requester);}
          placement: append
    config:
      avoidOptionals: true

  graphql/Admin/schema.json:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
            X-Hasura-Role: admin
    plugins:
      - "introspection"
  graphql/Admin/operations.ts:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
            X-Hasura-Role: admin
    documents: 
      - ./**/*.admin.graphql
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-generic-sdk":
          noExport: true
          documentMode: string
      - add:
          content:
            - import { useFetchRequester } from "../FetchRequester";
          placement: prepend
      - add:
          content: export function useAdminSdk(){const requester = useFetchRequester('admin');return getSdk(requester);}
          placement: append
    config:
      avoidOptionals: true

  # ../infrastructure/hasura/metadata/query_collections.yaml:
  #   schema:
  #     - http://localhost:9023/v1/graphql:
  #         headers:
  #           X-Hasura-Admin-Secret: password
  #           X-Hasura-Role: admin
  #   documents: graphql/**/*.graphql
  #   plugins:
  #     - hasura-allow-list
  #   hooks:
  #     afterOneFileWrite:
  #       - docker compose -f ../infrastructure/development/docker-compose.yml restart hasura && echo


  graphql/api/schema.json:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
    plugins:
      - "introspection"
  graphql/api/operations.ts:
    schema:
      - http://localhost:9023/v1/graphql:
          headers:
            X-Hasura-Admin-Secret: password
    documents: 
      - ./**/*.api.graphql
    plugins:
      - "typescript"
      - "typescript-operations"
      - "typescript-generic-sdk":
          noExport: true
          documentMode: string
      - add:
          content:
            - import { fetchRequester } from "./FetchRequester";
          placement: prepend
      - add:
          content: export const apiSdk = getSdk(fetchRequester());
          placement: append
    config:
      avoidOptionals: 
        field: true